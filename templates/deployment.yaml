apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "activepieces.fullname" . }}
  labels:
    {{- include "activepieces.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "activepieces.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "activepieces.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "activepieces.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: AP_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: encryption-key
            - name: AP_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: jwt-secret
            - name: AP_ENVIRONMENT
              value: prod
            - name: AP_ENGINE_EXECUTABLE_PATH
              value: dist/packages/engine/main.js
            - name: AP_NODE_EXECUTABLE_PATH
              value: /usr/local/bin/node
            - name: AP_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-redis
                  key: redis-password
            - name: AP_REDIS_HOST
              value: {{ .Release.Name }}-redis-master
            - name: AP_REDIS_PORT
              value: '6379'
            - name: AP_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: postgres-password
            - name: AP_POSTGRES_HOST
              value: {{ .Release.Name }}-postgresql
            - name: AP_POSTGRES_DATABASE
              value: activepieces
            - name: AP_POSTGRES_PORT
              value: '5432'
            - name: AP_POSTGRES_USERNAME
              value: postgres              
            {{- if .Values.extraEnvVars }}
            {{- toYaml .Values.extraEnvVars | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
